plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'eclipse' // only required when using Eclipse
    id "org.springframework.boot" version "3.3.0"
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.jetbrains.kotlin.jvm' version '1.8.20'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

repositories {
    // Use JCenter for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation "junit:junit:4.13.2"
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.6.0'
    implementation 'org.json:json:20171018'
    implementation "org.jacoco:org.jacoco.ant:0.8.5"
    implementation "net.minidev:json-smart:1.3.1"
	implementation "org.apache.pdfbox:pdfbox-ant:1.8.16"
    implementation "org.apache.poi:poi-ooxml:5.2.3"
    implementation "org.apache.tika:tika-core:2.7.0"

    implementation 'org.glassfish.jersey.core:jersey-server:3.0.2' 
    implementation 'org.glassfish.jersey.containers:jersey-container-servlet:3.0.2' 
    implementation 'org.glassfish.jersey.media:jersey-media-multipart:3.0.2' 
    implementation 'org.glassfish.tyrus.bundles:tyrus-standalone-client:1.15'

    // MongoDB Java driver GridFS
    // implementation "org.mongodb:mongodb-driver-sync:4.9.0"
    implementation "org.mongodb:bson:4.9.0"
    
    // Jackson (for JSON serialization/deserialization)
    implementation "com.fasterxml.jackson.core:jackson-databind:2.14.2"

    implementation "com.google.code.gson:gson:2.10.1"

    // for writing tasks postgresql connection
    implementation "org.apache.commons:commons-dbcp2:2.9.0"

    implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'
	implementation 'javax.websocket:javax.websocket-api:1.1'

    compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
     //   javax.websocket-api;version="1.1", jslack;version="1.8.1", rocketchat-common;version="0.7.1, rocketchat-core;version="0.7.1, rocketchat-livechat;version="0.7.1"
    testImplementation "junit:junit:4.13.2"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

bootJar {
    mainClassName = "${project.property('service.name')}.${project.property('service.class')}"
}

application {
    // Define the main class for the application.
    mainClass = "${project.property('service.name')}.${project.property('service.class')}"

    group = "${project.property('service.name')}"
    archivesBaseName = group

    version = "${project.property('service.version')}"
    sourceCompatibility = "${project.property('java.version')}"
    targetCompatibility = "${project.property('java.version')}"
}

springBoot {
    mainClassName = "${project.property('service.name')}.${project.property('service.class')}"
}

tasks.named('test') {
  useJUnitPlatform()
}
